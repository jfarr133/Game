////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	LinkListNode.cs
//
// summary:	Implements the link list node class
////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

/*
 * Author: Jakob Farrow 2104990817 or 455089250
 * Purpose: The functionality for this page is to create and get the values for the linked list. 
 * Version Control: 1.0
 * Date: 15/09/18
 */

namespace NetworkArithmeticGame
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A link list node. </summary>
    ///
    /// <remarks>   Jakob, 15/09/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    class LinkListNode
    {
        /// <summary>   my value. </summary>
        int myValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the next. </summary>
        ///
        /// <value> The next. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        LinkListNode previous, next;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Constructor. </summary>
        ///
        /// <remarks>   Jakob, 15/09/2018. </remarks>
        ///
        /// <param name="theValue"> the value. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public LinkListNode(int theValue)
        {
            myValue = theValue;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the value. </summary>
        ///
        /// <remarks>   Jakob, 15/09/2018. </remarks>
        ///
        /// <returns>   The value. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public int getValue()
        {
            return this.myValue;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Sets my value. </summary>
        ///
        /// <remarks>   Jakob, 15/09/2018. </remarks>
        ///
        /// <param name="aValue">   The value. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public void setMyValue(int aValue)
        {
            myValue = aValue;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Sets a next. </summary>
        ///
        /// <remarks>   Jakob, 15/09/2018. </remarks>
        ///
        /// <param name="theNode">  the node. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public void setNext(LinkListNode theNode)
        {
            this.next = theNode;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the next item. </summary>
        ///
        /// <remarks>   Jakob, 15/09/2018. </remarks>
        ///
        /// <returns>   The next. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public LinkListNode getNext()
        {
            return this.next;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Sets the previous. </summary>
        ///
        /// <remarks>   Jakob, 15/09/2018. </remarks>
        ///
        /// <param name="theNode">  the node. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public void setPrevious(LinkListNode theNode)
        {
            this.previous = theNode;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the previous item. </summary>
        ///
        /// <remarks>   Jakob, 15/09/2018. </remarks>
        ///
        /// <returns>   The previous. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public LinkListNode getPrevious()
        {
            return this.previous;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the tostring. </summary>
        ///
        /// <remarks>   Jakob, 15/09/2018. </remarks>
        ///
        /// <returns>   A string. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string tostring()
        {
            return myValue.ToString();
        }
    }
}
